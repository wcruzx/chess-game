{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wever\\\\OneDrive\\\\Documentos\\\\Projetos\\\\chess-game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    board: Array(8).fill(null).map(() => Array(8).fill(null))\n  });\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/initialBoard').then(response => response.json()).then(data => {\n      setGameState({\n        board: data\n      });\n    }).catch(error => {\n      console.error('Error fetching the initial board:', error);\n    });\n  }, []);\n  const movePiece = (fromPosition, toPosition) => {\n    const board = gameState.board.map(row => row.slice());\n    const piece = board[fromPosition.row][fromPosition.col];\n    board[fromPosition.row][fromPosition.col] = null;\n    board[toPosition.row][toPosition.col] = piece;\n    setGameState({\n      board\n    });\n    setSelectedPiece(null);\n    setPossibleMoves([]);\n  };\n  const handlePieceClick = position => {\n    const piece = gameState.board[position.row][position.col];\n    if (piece) {\n      fetch(`http://localhost:4000/possibleMoves?row=${position.row}&col=${position.col}`).then(response => response.json()).then(data => {\n        setSelectedPiece(position);\n        setPossibleMoves(data);\n      }).catch(error => {\n        console.error('Error fetching possible moves:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Chess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(Board, {\n      gameState: gameState,\n      movePiece: movePiece,\n      selectedPiece: selectedPiece,\n      possibleMoves: possibleMoves,\n      onPieceClick: handlePieceClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lbD4ktWZJdpnx5DTyLhEYIgQNd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","board","Array","fill","map","selectedPiece","setSelectedPiece","possibleMoves","setPossibleMoves","fetch","then","response","json","data","catch","error","console","movePiece","fromPosition","toPosition","row","slice","piece","col","handlePieceClick","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPieceClick","_c","$RefreshReg$"],"sources":["C:/Users/wever/OneDrive/Documentos/Projetos/chess-game/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Board from './components/Board';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [gameState, setGameState] = useState({\r\n    board: Array(8).fill(null).map(() => Array(8).fill(null))\r\n  });\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [possibleMoves, setPossibleMoves] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/initialBoard')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setGameState({ board: data });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching the initial board:', error);\r\n      });\r\n  }, []);\r\n\r\n  const movePiece = (fromPosition, toPosition) => {\r\n    const board = gameState.board.map(row => row.slice());\r\n    const piece = board[fromPosition.row][fromPosition.col];\r\n    board[fromPosition.row][fromPosition.col] = null;\r\n    board[toPosition.row][toPosition.col] = piece;\r\n    setGameState({ board });\r\n    setSelectedPiece(null);\r\n    setPossibleMoves([]);\r\n  };\r\n\r\n  const handlePieceClick = (position) => {\r\n    const piece = gameState.board[position.row][position.col];\r\n    if (piece) {\r\n      fetch(`http://localhost:4000/possibleMoves?row=${position.row}&col=${position.col}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setSelectedPiece(position);\r\n          setPossibleMoves(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching possible moves:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\">Chess Game</h1>      <Board \r\n        gameState={gameState} \r\n        movePiece={movePiece} \r\n        selectedPiece={selectedPiece} \r\n        possibleMoves={possibleMoves} \r\n        onPieceClick={handlePieceClick} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}